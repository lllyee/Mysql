1. 查询" 01 "课程比" 02 "课程成绩高的学生的信息及课程分数
select * from (select * from sc where cid='01') as t1,(select * from sc where cid='02') as t2 where t1.sid=t2.sid and t1.score>t2.score;

1.1 查询同时存在" 01 "课程和" 02 "课程的情况
select * from (select * from sc where cid='01') as t1,(select * from sc where cid='02') as t2 where t1.sid=t2.sid;

1.2 查询存在" 01 "课程但可能不存在" 02 "课程的情况(不存在时显示为 null )
select * from (select * from sc where cid='01') as t1 left join (select * from sc where cid='02') as t2 on t1.sid=t2.sid;

1.3 查询不存在" 01 "课程但存在" 02 "课程的情况
select  * from (select * from sc where cid!='01') as t1,(select * from sc where cid='02') as t2 where t1.sid=t2.sid;

2. 查询平均成绩大于等于 60 分的同学的学生编号和学生姓名和平均成绩
select * from student,(select sid ,avg(score) as avgscore from sc group by sid having avgscore>60) as t1 where t1.sid=student.sid;

3. 查询在 SC 表存在成绩的学生信息
select distinct student.* from student,sc where sc.sid=student.sid;

4. 查询所有同学的学生编号、学生姓名、选课总数、所有课程的总成绩(没成绩的显示为 null )
select student.sid,student.sname,t1.countcid,t1.countscore  from student left join (select sc.sid,count(cid) as countcid,count(score) 
as countscore from sc group by sc.sid )as t1 on t1.sid=student.sid;

4.1 查有成绩的学生信息
select distinct student.* from student right join sc on sc.sid=student.sid;

5. 查询「李」姓老师的数量
select count(*) from Teacher where Tname like '李%';

6. 查询学过「张三」老师授课的同学的信息
select distinct student.* from student ,Teacher,sc,course
where Teacher.Tname='张三' and course.Tid=Teacher.Tid and course.cid=sc.cid and sc.sid=student.sid;

7. 查询没有学全所有课程的同学的信息
select student.* from student ,(select sc.sid from sc group by sid having count(cid) <
 (select count(*) as countcourse from course)) as t1 where t1.sid=student.sid ;


8. 查询至少有一门课与学号为" 01 "的同学所学相同的同学的信息
select student.* from student,(select distinct sid from sc  where cid in (select cid from sc where sid='01')) as t1 where student.sid=t1.sid;

9. 查询和" 01 "号的同学学习的课程 完全相同的其他同学的信息
select * from student where student.sid in 
( select sc.sid from sc where cid in (select cid from sc where sid='01' ) group by sid having count(*)=(select count(*) from sc where sid ='01') ) and student.sid !='01'

10. 查询没学过"张三"老师讲授的任一门课程的学生姓名
select student.sname from student where student.sid not in (select student.sid from student,course,Teacher,sc where Teacher.Tname='张三' and 
Teacher.Tid=course.Tid and course.cid=sc.cid and sc.sid=student.sid);


11. 查询两门及其以上不及格课程的同学的学号，姓名及其平均成绩

select student.SId ,avg(sc.score) from student,sc where student.SId=sc.SId and sc.score<60 group by sc.SId having count(*)>=2;

12. 检索" 01 "课程分数小于 60，按分数降序排列的学生信息
select student.* from student,sc where sc.CId='01' and sc.score<60 and student.SId=sc.SId order by sc.score desc;

13. 按平均成绩从高到低显示所有学生的所有课程的成绩以及平均成绩

select sc.SId,sc.CId,sc.score,t1.avgscore from sc left join
 (select sc.SId,avg(sc.score) as avgscore from sc GROUP BY sc.SId) as t1 on sc.SId =t1.SId
 ORDER BY t1.avgscore DESC


14. 查询各科成绩最高分、最低分和平均分：

以如下形式显示：课程 ID，课程 name，最高分，最低分，平均分，及格率，中等率，优良率，优秀率

及格为>=60，中等为：70-80，优良为：80-90，优秀为：>=90

要求输出课程号和选修人数，查询结果按人数降序排列，若人数相同，按课程号升序排列

select sc.CId ,max(sc.score)as 最高分,min(sc.score)as 最低分,
AVG(sc.score)as 平均分,count(*)as 选修人数,sum
(case when sc.score>=60 then 1 else 0 end )/count(*)as 及格率,
sum(case when sc.score>=70 and sc.score<80 then 1 else 0 end )/count(*)as 中等率,
sum(case when sc.score>=80 and sc.score<90 and sc.score<80 then 1 else 0 end )/count(*)as 优良率,
sum(case when sc.score>=90 then 1 else 0 end )/count(*)as 优秀率
from sc
GROUP BY sc.CId
ORDER BY count(*)DESC,sc.CId asc

15. 按各科成绩进行排序，并显示排名， Score 重复时保留名次空缺
select sc.CId,@curRank:=@curRank+1 as rank,sc.score from sc,(select @curRank:=0) as t1 group by sc.CId order by sc.score desc



15.1 按各科成绩进行排序，并显示排名， Score 重复时合并名次


select sc.CId , case when @fontscore=score then @curRank when @fontscore:=score then @curRank:=@curRank+1  end as rank,sc.score
from (select @curRank:=0 ,@fontage:=null) as t ,sc
ORDER BY sc.score desc

16.  查询学生的总成绩，并进行排名，总分重复时保留名次空缺

select t1.*,@currank:= @currank+1
from (select sc.SId, sum(score)
from sc
GROUP BY sc.SId
ORDER BY sum(score) desc) as t1,(select @currank:=0) as t;



16.1 查询学生的总成绩，并进行排名，总分重复时不保留名次空缺

select t1.*, case when @fontscore=t1.sumscore then @currank  when @fontscore:=t1.sumscore  then @currank:=@currank+1  end as rank
from (select sc.SId, sum(score) as sumscore
from sc
GROUP BY sc.SId
ORDER BY sum(score) desc) as t1,(select @currank:=0,@fontscore:=null) as t;




17. 统计各科成绩各分数段人数：课程编号，课程名称，[100-85]，[85-70]，[70-60]，[60-0] 及所占百分比

select course.CId,course.Cname,t1.*
from course LEFT JOIN (
select sc.CId,CONCAT(sum(case when sc.score>=85 and sc.score<=100 then 1 else 0 end )/count(*)*100,'%') as '[85-100]',
CONCAT(sum(case when sc.score>=70 and sc.score<85 then 1 else 0 end )/count(*)*100,'%') as '[70-85)',
CONCAT(sum(case when sc.score>=60 and sc.score<70 then 1 else 0 end )/count(*)*100,'%') as '[60-70)',
CONCAT(sum(case when sc.score>=0 and sc.score<60 then 1 else 0 end )/count(*)*100,'%') as '[0-60)'
from sc
GROUP BY sc.CId) as t1 on course.CId=t1.CId

18. 查询各科成绩前三名的记录
select *
from sc
where  (select count(*) from sc as a where sc.CId =a.CId and sc.score <a.score )<3
ORDER BY CId asc,sc.score desc;



19. 查询每门课程被选修的学生数
select count(SC.SId) from SC group by SC.CId;


20. 查询出只选修两门课程的学生学号和姓名

select student.SId,student.Sname
from sc,student
where student.SId=sc.SId
GROUP BY sc.SId
HAVING count(*)=2;

21. 查询男生、女生人数
select student.Ssex ,count(*) as 人数
from student
GROUP BY student.Ssex

22. 查询名字中含有「风」字的学生信息


23. 查询同名同性学生名单，并统计同名人数

24. 查询 1990 年出生的学生名单

25. 查询每门课程的平均成绩，结果按平均成绩降序排列，平均成绩相同时，按课程编号升序排列

26. 查询平均成绩大于等于 85 的所有学生的学号、姓名和平均成绩

27. 查询课程名称为「数学」，且分数低于 60 的学生姓名和分数

28. 查询所有学生的课程及分数情况（存在学生没成绩，没选课的情况）

29. 查询任何一门课程成绩在 70 分以上的姓名、课程名称和分数

30. 查询不及格的课程

31. 查询课程编号为 01 且课程成绩在 80 分以上的学生的学号和姓名

32. 求每门课程的学生人数

33. 成绩不重复，查询选修「张三」老师所授课程的学生中，成绩最高的学生信息及其成绩

34. 成绩有重复的情况下，查询选修「张三」老师所授课程的学生中，成绩最高的学生信息及其成绩


35. 查询不同课程成绩相同的学生的学生编号、课程编号、学生成绩


36. 查询每门功成绩最好的前两名



37. 统计每门课程的学生选修人数（超过 5 人的课程才统计）。
select sc.cid,count(*) from sc group by sc.cid having count(*)>4;

38. 检索至少选修两门课程的学生学号
select student.sid,student.sname from student,sc where student.sid=sc.sid group by sc.sid having count(*)>=2;

39. 查询选修了全部课程的学生信息
select student.sname,student.sid from student,sc where student.sid=sc.sid group by sc.sid having count(*)=(select count(*)from course);

40. 查询各学生的年龄，只按年份来算
select student.*,TIMESTAMPDIFF(year,student.sage,curdate()) AS AGE FROM STUDENT;

41. 按照出生日期来算，当前月日 < 出生年月的月日则，年龄减一
select student.*,TIMESTAMPDIFF(year,student.sage,curdate()) AS AGE FROM STUDENT;

42. 查询本周过生日的学生

select student.* from student where weekofyear(student.sage)=weekofyear(curdate());

43. 查询下周过生日的学生
select student.* from student where weekofyear(student.sage)=weekofyear(curdate())+1;

44. 查询本月过生日的学生
select * from student where month(student.sage)=month(curdate());

45. 查询下月过生日的学生
select * from student where month(student.sage)=month(curdate())+1;


